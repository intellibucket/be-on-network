<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="az.rock.flyjob.js.dataaccess.repository.abstracts.query.batis.CourseBatisRepository">
    <resultMap id="BaseResultMap" type="az.rock.flyjob.js.dataaccess.model.batis.model.CourseCompose">
        <id column="uuid" property="uuid"
            typeHandler="az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="process_status" jdbcType="VARCHAR" property="processStatus"/>
        <result column="row_status" jdbcType="VARCHAR" property="rowStatus"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="modification_date" jdbcType="TIMESTAMP" property="modificationDate"/>
        <result column="resume_uuid" property="resumeUuid"
                typeHandler="az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler"/>
        <result column="access_modifier" jdbcType="VARCHAR" property="accessModifier"/>
        <result column="order_number" jdbcType="INTEGER" property="orderNumber"/>
        <result column="course_title" jdbcType="VARCHAR" property="courseTitle"/>
        <result column="institution" jdbcType="VARCHAR" property="institution"/>
        <result column="is_online" jdbcType="BIT" property="isOnline"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="end_date" jdbcType="DATE" property="endDate"/>
        <result column="is_continue" jdbcType="VARCHAR" property="isContinue"/>
        <result column="certificate_file_path" jdbcType="VARCHAR" property="certificateFilePath"/>
        <result column="verification_address" jdbcType="VARCHAR" property="verificationAddress"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        uuid
        , version, process_status, row_status, created_date, modification_date, resume_uuid,
    access_modifier, order_number, course_title, institution, is_online, city, country, 
    start_date, end_date, is_continue, certificate_file_path, verification_address
    </sql>
    <select id="selectByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseComposeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from resume.courses
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pageable != null">
            OFFSET #{pageable.offset} ROWS
            FETCH NEXT #{pageable.limit} ROWS ONLY
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from resume.courses
        where uuid = #{uuid,typeHandler=az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
        delete
        from resume.courses
        where uuid = #{uuid,typeHandler=az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler}
    </delete>
    <delete id="deleteByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseComposeExample">
        delete from resume.courses
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseCompose">
        insert into resume.courses (uuid, version, process_status,
                                    row_status, created_date, modification_date,
                                    resume_uuid, access_modifier, order_number,
                                    course_title, institution, is_online,
                                    city, country, start_date,
                                    end_date, is_continue, certificate_file_path,
                                    verification_address)
        values (#{uuid,jdbcType=OTHER}, #{version,jdbcType=BIGINT}, #{processStatus,jdbcType=VARCHAR},
                #{rowStatus,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP},
                #{modificationDate,jdbcType=TIMESTAMP},
                #{resumeUuid,jdbcType=OTHER}, #{accessModifier,jdbcType=VARCHAR}, #{orderNumber,jdbcType=INTEGER},
                #{courseTitle,jdbcType=VARCHAR}, #{institution,jdbcType=VARCHAR}, #{isOnline,jdbcType=BIT},
                #{city,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE},
                #{endDate,jdbcType=DATE}, #{isContinue,jdbcType=VARCHAR}, #{certificateFilePath,jdbcType=VARCHAR},
                #{verificationAddress,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseCompose">
        insert into resume.courses
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="processStatus != null">
                process_status,
            </if>
            <if test="rowStatus != null">
                row_status,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="modificationDate != null">
                modification_date,
            </if>
            <if test="resumeUuid != null">
                resume_uuid,
            </if>
            <if test="accessModifier != null">
                access_modifier,
            </if>
            <if test="orderNumber != null">
                order_number,
            </if>
            <if test="courseTitle != null">
                course_title,
            </if>
            <if test="institution != null">
                institution,
            </if>
            <if test="isOnline != null">
                is_online,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="country != null">
                country,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="isContinue != null">
                is_continue,
            </if>
            <if test="certificateFilePath != null">
                certificate_file_path,
            </if>
            <if test="verificationAddress != null">
                verification_address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=OTHER},
            </if>
            <if test="version != null">
                #{version,jdbcType=BIGINT},
            </if>
            <if test="processStatus != null">
                #{processStatus,jdbcType=VARCHAR},
            </if>
            <if test="rowStatus != null">
                #{rowStatus,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modificationDate != null">
                #{modificationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="resumeUuid != null">
                #{resumeUuid,jdbcType=OTHER},
            </if>
            <if test="accessModifier != null">
                #{accessModifier,jdbcType=VARCHAR},
            </if>
            <if test="orderNumber != null">
                #{orderNumber,jdbcType=INTEGER},
            </if>
            <if test="courseTitle != null">
                #{courseTitle,jdbcType=VARCHAR},
            </if>
            <if test="institution != null">
                #{institution,jdbcType=VARCHAR},
            </if>
            <if test="isOnline != null">
                #{isOnline,jdbcType=BIT},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=DATE},
            </if>
            <if test="isContinue != null">
                #{isContinue,jdbcType=VARCHAR},
            </if>
            <if test="certificateFilePath != null">
                #{certificateFilePath,jdbcType=VARCHAR},
            </if>
            <if test="verificationAddress != null">
                #{verificationAddress,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseComposeExample"
            resultType="java.lang.Long">
        select count(*) from resume.courses
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update resume.courses
        <set>
            <if test="record.uuid != null">
                uuid = #{record.uuid,jdbcType=OTHER},
            </if>
            <if test="record.version != null">
                version = #{record.version,jdbcType=BIGINT},
            </if>
            <if test="record.processStatus != null">
                process_status = #{record.processStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.rowStatus != null">
                row_status = #{record.rowStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.createdDate != null">
                created_date = #{record.createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modificationDate != null">
                modification_date = #{record.modificationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.resumeUuid != null">
                resume_uuid = #{record.resumeUuid,jdbcType=OTHER},
            </if>
            <if test="record.accessModifier != null">
                access_modifier = #{record.accessModifier,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNumber != null">
                order_number = #{record.orderNumber,jdbcType=INTEGER},
            </if>
            <if test="record.courseTitle != null">
                course_title = #{record.courseTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.institution != null">
                institution = #{record.institution,jdbcType=VARCHAR},
            </if>
            <if test="record.isOnline != null">
                is_online = #{record.isOnline,jdbcType=BIT},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
            <if test="record.country != null">
                country = #{record.country,jdbcType=VARCHAR},
            </if>
            <if test="record.startDate != null">
                start_date = #{record.startDate,jdbcType=DATE},
            </if>
            <if test="record.endDate != null">
                end_date = #{record.endDate,jdbcType=DATE},
            </if>
            <if test="record.isContinue != null">
                is_continue = #{record.isContinue,jdbcType=VARCHAR},
            </if>
            <if test="record.certificateFilePath != null">
                certificate_file_path = #{record.certificateFilePath,jdbcType=VARCHAR},
            </if>
            <if test="record.verificationAddress != null">
                verification_address = #{record.verificationAddress,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update resume.courses
        set uuid = #{record.uuid,jdbcType=OTHER},
        version = #{record.version,jdbcType=BIGINT},
        process_status = #{record.processStatus,jdbcType=VARCHAR},
        row_status = #{record.rowStatus,jdbcType=VARCHAR},
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
        modification_date = #{record.modificationDate,jdbcType=TIMESTAMP},
        resume_uuid = #{record.resumeUuid,jdbcType=OTHER},
        access_modifier = #{record.accessModifier,jdbcType=VARCHAR},
        order_number = #{record.orderNumber,jdbcType=INTEGER},
        course_title = #{record.courseTitle,jdbcType=VARCHAR},
        institution = #{record.institution,jdbcType=VARCHAR},
        is_online = #{record.isOnline,jdbcType=BIT},
        city = #{record.city,jdbcType=VARCHAR},
        country = #{record.country,jdbcType=VARCHAR},
        start_date = #{record.startDate,jdbcType=DATE},
        end_date = #{record.endDate,jdbcType=DATE},
        is_continue = #{record.isContinue,jdbcType=VARCHAR},
        certificate_file_path = #{record.certificateFilePath,jdbcType=VARCHAR},
        verification_address = #{record.verificationAddress,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseCompose">
        update resume.courses
        <set>
            <if test="version != null">
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="processStatus != null">
                process_status = #{processStatus,jdbcType=VARCHAR},
            </if>
            <if test="rowStatus != null">
                row_status = #{rowStatus,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modificationDate != null">
                modification_date = #{modificationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="resumeUuid != null">
                resume_uuid = #{resumeUuid,jdbcType=OTHER},
            </if>
            <if test="accessModifier != null">
                access_modifier = #{accessModifier,jdbcType=VARCHAR},
            </if>
            <if test="orderNumber != null">
                order_number = #{orderNumber,jdbcType=INTEGER},
            </if>
            <if test="courseTitle != null">
                course_title = #{courseTitle,jdbcType=VARCHAR},
            </if>
            <if test="institution != null">
                institution = #{institution,jdbcType=VARCHAR},
            </if>
            <if test="isOnline != null">
                is_online = #{isOnline,jdbcType=BIT},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=DATE},
            </if>
            <if test="isContinue != null">
                is_continue = #{isContinue,jdbcType=VARCHAR},
            </if>
            <if test="certificateFilePath != null">
                certificate_file_path = #{certificateFilePath,jdbcType=VARCHAR},
            </if>
            <if test="verificationAddress != null">
                verification_address = #{verificationAddress,jdbcType=VARCHAR},
            </if>
        </set>
        where uuid = #{uuid,jdbcType=OTHER}
    </update>
    <update id="updateByPrimaryKey" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.CourseCompose">
        update resume.courses
        set version               = #{version,jdbcType=BIGINT},
            process_status        = #{processStatus,jdbcType=VARCHAR},
            row_status            = #{rowStatus,jdbcType=VARCHAR},
            created_date          = #{createdDate,jdbcType=TIMESTAMP},
            modification_date     = #{modificationDate,jdbcType=TIMESTAMP},
            resume_uuid           = #{resumeUuid,jdbcType=OTHER},
            access_modifier       = #{accessModifier,jdbcType=VARCHAR},
            order_number          = #{orderNumber,jdbcType=INTEGER},
            course_title          = #{courseTitle,jdbcType=VARCHAR},
            institution           = #{institution,jdbcType=VARCHAR},
            is_online             = #{isOnline,jdbcType=BIT},
            city                  = #{city,jdbcType=VARCHAR},
            country               = #{country,jdbcType=VARCHAR},
            start_date            = #{startDate,jdbcType=DATE},
            end_date              = #{endDate,jdbcType=DATE},
            is_continue           = #{isContinue,jdbcType=VARCHAR},
            certificate_file_path = #{certificateFilePath,jdbcType=VARCHAR},
            verification_address  = #{verificationAddress,jdbcType=VARCHAR}
        where uuid = #{uuid,jdbcType=OTHER}
    </update>
</mapper>