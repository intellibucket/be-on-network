<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="az.rock.flyjob.auth.dataAccess.repository.abstracts.query.batis.AbstractUserComposeQueryBatisRepository">

    <sql id="user_profile_result_sql"><![CDATA[
        select usr.uuid as uuid,
       usr.version as version,
       usr.row_status as rowStatus,
       usr.process_status as trxProcessStatus,
       usr.first_name as firstName,
       usr.last_name as lastName,
       usr.username as username,
       usr.title as title,
       usr.biography as biography,
       usr.gender as gender,
       usr.user_type as userType,
       usr.timezone as timezone,
       count(fr.uuid) as followCount,
       count(nr.uuid) as networkCount
        ]]></sql>


    <resultMap id="my_profile_result_map"
               type="az.rock.flyjob.auth.model.query.MyProfileQueryRecord">
        <id property="userId"
            column="uuid"
            typeHandler="az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler"/>
        <result property="version" column="version"/>
        <result property="rowStatus" column="rowStatus"/>
        <result property="trxProcessStatus" column="trxProcessStatus"/>
        <result property="firstName" column="firstName"/>
        <result property="lastName" column="lastName"/>
        <result property="username" column="username"/>
        <result property="title" column="title"/>
        <result property="biography" column="biography"/>
        <result property="gender" column="gender"/>
        <result property="userType" column="userType"/>
        <result property="timezone" column="timezone"/>
        <result property="followCount" column="followCount"/>
        <result property="networkCount" column="networkCount"/>
    </resultMap>


    <resultMap id="followerResultMap" type="az.rock.auth.domain.presentation.dto.response.user.SimpleFollowerUserResponse">
        <id property="authId"
            column="uuid"
            typeHandler="az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler"/>
        <result property="username" column="username"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="title" column="title"/>
    </resultMap>

    <resultMap id="networkResultMap" type="az.rock.auth.domain.presentation.dto.response.user.SimpleNetworkUserResponse">
        <id property="authId"
            column="uuid"
            typeHandler="az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler"/>
        <result property="username" column="username"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="title" column="title"/>
    </resultMap>

    <select id="findUserProfileById" resultType="az.rock.flyjob.auth.model.query.MyProfileQueryRecord">
        select usr.uuid                                as uuid,
               usr.version                             as version,
               usr.row_status                          as rowStatus,
               usr.process_status                      as trxProcessStatus,
               usr.first_name                          as firstName,
               usr.last_name                           as lastName,
               usr.username                            as username,
               usr.title                               as title,
               usr.biography                           as biography,
               usr.gender                              as gender,
               usr.user_type                           as userType,
               usr.timezone                            as timezone,
               (select count(frr.uuid)
                from network.follow_relation frr
             where frr.row_status = 'ACTIVE'
               and frr.follow_status = 'ACCEPTED'
               and frr.process_status = 'COMPLETED'
               and frr.followed_user_id = usr.uuid)    as followCount,
            (select count(nrr.uuid)
             from network.network_relation nrr
             where nrr.process_status = 'COMPLETED'
                 and nrr.row_status = 'ACTIVE'
                 and network_status = 'ACCEPTED'
                 and block_reason_status = 'UNKNOWN'
                 and (nrr.request_owner_id = usr.uuid)
                or (nrr.request_target_id = usr.uuid)) as networkCount
        from auth.users usr
        where usr.uuid = #{userId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
    </select>

    <select id="findAnyUserProfileById" resultType="az.rock.flyjob.auth.model.query.AnyProfileQueryRecord">
        select usr.uuid                                as uuid,
               usr.version                             as version,
               usr.row_status                          as rowStatus,
               usr.process_status                      as trxProcessStatus,
               usr.first_name                          as firstName,
               usr.last_name                           as lastName,
               usr.username                            as username,
               usr.title                               as title,
               usr.biography                           as biography,
               usr.gender                              as gender,
               usr.user_type                           as userType,
               usr.timezone                            as timezone,
               (select count(frr.uuid)
                from network.follow_relation frr
             where frr.row_status = 'ACTIVE'
               and frr.follow_status = 'ACCEPTED'
               and frr.process_status = 'COMPLETED'
               and frr.followed_user_id = usr.uuid)    as followCount,
            (select count(nrr.uuid)
             from network.network_relation nrr
             where nrr.process_status = 'COMPLETED'
                 and nrr.row_status = 'ACTIVE'
                 and network_status = 'ACCEPTED'
                 and block_reason_status = 'UNKNOWN'
                 and (nrr.request_owner_id = usr.uuid)
                or (nrr.request_target_id = usr.uuid)) as networkCount
        from auth.users usr
        where usr.uuid = #{targetId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
          and not exists(select *
                         from network.block_relation br
                         where br.row_status = 'ACTIVE'
                           and ((br.user_id = #{authId} and br.target_user_id =#{targetId})
                             OR (br.target_user_id = #{authId} and br.user_id = #{targetId})))
          and usr.row_status = 'ACTIVE';
    </select>


    <select id="findAllAnyUserProfilesByIds" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleAnyUserProfileResponse">
        select usr.uuid,
               usr.username,
               usr.first_name,
               usr.last_name,
               usr.title
        from (select *
              from auth.users u
              where u.row_status = 'ACTIVE' and u.uuid in
            <foreach item="targetUserId" collection="targetUserIds" separator="," open="(" close=")">
                #{targetUserId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
            </foreach>
              ) usr
        where not exists(
                select *
                from network.block_relation br
                where br.row_status = 'ACTIVE'
                  and ((br.user_id = #{authId} and br.target_user_id = usr.uuid)
                    OR (br.target_user_id = #{authId} and br.user_id = usr.uuid))
            );
    </select>

    <select id="findAllMyFollowers" resultMap="followerResultMap" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleFollowerUserResponse">
        select usr.uuid,
               usr.username,
               usr.first_name,
               usr.last_name,
               usr.title
        from (select use.uuid,use.username,use.last_name,use.first_name,use.title
              from auth.users use
                       join network.follow_relation fr on use.uuid = fr.followed_user_id
              where use.row_status = 'ACTIVE'
                    and fr.following_user_id =
                        #{authId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}) usr
        where not exists(
        select *
        from network.block_relation br
        where br.row_status = 'ACTIVE'
        and ((br.user_id = #{authId} and br.target_user_id = usr.uuid)
        OR (br.target_user_id = #{authId} and br.user_id = usr.uuid))
        )
    </select>

    <select id="findAllMyNetworks" resultMap="networkResultMap" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleNetworkUserResponse">
        SELECT
            usr.uuid,
            usr.username,
            usr.first_name,
            usr.last_name,
            usr.title
        FROM
            auth.users usr
        WHERE
                usr.uuid in (
                SELECT
                    CASE
                        WHEN aa.request_owner_id = #{authId} THEN aa.request_target_id
                        WHEN aa.request_target_id = #{authId} THEN aa.request_owner_id
                        END AS uuid
                FROM (
                         SELECT
                             nrr.request_target_id,
                             nrr.request_owner_id
                         FROM
                             auth.users usr
                                 JOIN
                             network.network_relation nrr ON nrr.request_owner_id = usr.uuid OR nrr.request_target_id = usr.uuid
                         WHERE
                             usr.uuid = #{authId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
                           AND nrr.process_status = 'COMPLETED'
                           AND nrr.row_status = 'ACTIVE'
                           AND network_status = 'ACCEPTED'
                           AND block_reason_status = 'UNKNOWN'
                           AND NOT EXISTS (
                             SELECT *
                             FROM network.block_relation br
                             WHERE
                                 br.row_status = 'ACTIVE'
                               AND (
                                     (br.user_id = #{authId} AND br.target_user_id = usr.uuid)
                                     OR
                                     (br.target_user_id = #{authId} AND br.user_id = usr.uuid)
                                 )
                         )
                           AND usr.row_status = 'ACTIVE'
                     ) aa
            )
        GROUP BY
            usr.uuid,
            usr.username,
            usr.first_name,
            usr.last_name,
            usr.title;
    </select>
</mapper>